Provide one or more Active Record queries that retrieve the requested data for each of the following:

1. Find the albums recorded by the artist Queen.

Album.where(artist_id: Artist.where(name: 'Queen'));

2. Count how many tracks belong to the media type "Protected MPEG-4 video file".

Track.where(media_type_id: MediaType.where(name: "Protected MPEG-4 video file")).count;

3. Find the genre with the name "Hip Hop/Rap".

Genre.find_by name: "Hip Hop/Rap";

4. Count how many tracks belong to the "Hip Hop/Rap" genre

Track.where(genre_id: Genre.find_by(name: "Hip Hop/Rap")).count;

5. Find the total amount of time required to listen to all the tracks in the database.

Track.sum('milliseconds');

6. Find the highest price of any track that has the media type "MPEG audio file".

Track.where(media_type_id: MediaType.find_by(name: 'MPEG audio file')).maximum("unit_price");

7. Find the name of the most expensive track that has the media type "MPEG audio file".

Track.where(media_type_id: MediaType.find_by(name: 'MPEG audio file')).order(:unit_price).last;

.last gives DESC order

8. Find the 2 oldest artists.

There is no field *age* in the db Artist.
I would go like this:
Artist.order(age: :desc).limit(2);

Example with "created_at"
Artist.order(created_at: :asc).limit(2);

9. Find the least expensive track that has the genre "Electronica/Dance".

Track.where(genre_id: Genre.find_by(name: "Electronica/Dance")).order(:unit_price).first;

10. Find all "MPEG autio file" tracks in the genre "Electronica/Dance".

Track.where(genre_id: Genre.find_by(name: "Electronica/Dance")).where(media_type_id: MediaType.find_by(name: 'MPEG audio file'));


